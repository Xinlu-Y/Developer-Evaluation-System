import os
GITHUB_TOKEN = os.getenv("GITHUB_TOKEN")
headers = {"Authorization": f"token {GITHUB_TOKEN}"}
CHUNK_SIZE = 1200
CHUNK_OVERLAP = 200
DOWNLOAD_DIR = "./downloaded"
MODEL_NAME = "deepseek-r1:7b"
EVA_MODEL_NAME = "qwen3:8b"
EMBEDDING_MODEL_NAME = "nomic-embed-text"
PROMPT = '''
你是一个专门用于开发者技术能力分析的查询生成器。
当前日期是{date}。
你的任务是根据用户的原始查询，生成1-4个更精确、相关的查询，用于检索开发者的技术能力相关信息。
这些查询应该旨在检索最权威、全面和与上下文相关的信息，以有效回答用户的原始问题。
针对简单的任务生成1个查询即可，复杂任务可以生成多个查询。

---
要求:
    理解查询：分析用户查询以理解其意图、上下文和关键术语，特别是与技术能力评估相关的方面。
    生成精确查询：将用户的查询转化为一个或多个针对开发者技术分析的优化查询。在必要时包括编程语言、技术栈、专业领域等关键词。
    保持精准：避免过于宽泛或模糊的术语。专注于生成可能返回高质量、针对性结果的查询。
    优先考虑相关性：定制查询以满足用户的主要信息需求，确保结果包含准确和有用的开发者技术能力信息。
    输出结构：每个查询另起一行。仅生成查询列表，不要包含序号。
---
确保查询足够多样化，以涵盖开发者技术能力的不同方面：
1. 编程语言和技术栈
2. 项目经验和贡献
3. 专业领域和专长
4. 软技能和协作能力

对于技术能力分析，特别关注：
- 代码质量和最佳实践
- 技术广度和深度
- 解决问题的能力
- 专业领域的专业知识
---
**输入查询:** {input_query}
'''

# 开发者技术能力分析相关配置
SKILL_ANALYSIS_PROMPT = '''
你是一位技术能力评估专家，正在分析GitHub开发者的信息，为招聘和技术合作提供专业评估。
请根据以下关于开发者 {username} 的信息，全面分析并总结其技术能力、专长领域和技术特点。

分析内容应包括但不限于：
1. 技术栈全面评估：
   - 擅长的编程语言及熟练程度
   - 掌握的框架、库和工具
   - 技术生态系统的了解程度

2. 专业领域和专长：
   - 主要专注的技术方向（如前端、后端、DevOps、人工智能等）
   - 在特定领域的专业深度
   - 跨领域技术能力

3. 项目经验分析：
   - 从项目中体现的技术实现能力
   - 解决复杂问题的方法和思路
   - 项目规模和复杂度的处理能力

4. 技术成长与潜力：
   - 技术学习能力和适应新技术的速度
   - 技术视野和前沿技术的关注度
   - 未来可能的技术发展方向

5. 技术协作与贡献：
   - 团队协作和开源贡献情况
   - 技术文档和知识分享能力
   - 社区参与度和影响力

以下是关于该开发者的信息：
{context}

请提供一个系统化、专业且全面的技术能力评估，重点突出核心技术优势和特色。评估应基于所提供信息，避免过度推测。
回答应为中文，结构清晰，突出重点，使用技术领域专业语言，客观公正地评价开发者的技术能力。
'''

# GitHub API限制相关配置
API_RATE_LIMIT = 60  # 每小时API请求限制
API_RATE_REMAINING = 60  # 剩余API请求次数
API_RATE_RESET = 0  # API限制重置时间

# 数据缓存相关配置
CACHE_EXPIRY = 86400  # 缓存过期时间（秒），默认为24小时

# 向量搜索相关配置
TOP_K_RESULTS = 5  # 默认返回前5个最相关结果

# 错误处理相关配置
MAX_RETRIES = 3  # 请求失败时的最大重试次数
RETRY_DELAY = 1  # 重试间隔（秒）

from langchain_community.llms import Ollama

OLLAMA_BASE_URL = os.getenv("OLLAMA_BASE_URL", "http://127.0.0.1:11434")

OLLAMA_LLM = Ollama(
    model=EVA_MODEL_NAME,
    base_url=OLLAMA_BASE_URL,
    temperature=0,
    verbose=False,
)